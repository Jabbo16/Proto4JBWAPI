syntax = "proto3";
option optimize_for = LITE_RUNTIME;
package bwapi.data;

message Point {
    int32 x = 1;
    int32 y = 2;
    int32 scale = 3;
}

message BoolMapData {
    int32 x = 1;
    int32 y = 2;
    bool value = 3;
}

message IntArrayData {
    int32 index = 1;
    int32 value = 2;
}

message BoolArrayData {
    int32 index = 1;
    bool value = 2;
}

message StaticMapData
{
    Point size = 1;
    int32 tileset = 2;
    string mapHash = 3;
    string mapFileName = 4;
    string mapPath = 5;
    string mapName = 6;

    repeated int32 groundHeight = 7;
    repeated bool isBuildable = 8;
    repeated bool isWalkable = 9;

    repeated uint32 mapTileRegionId = 10;
    repeated uint32 mapSplitTilesMiniTileMask = 11;
    repeated uint32 mapSplitTilesRegion1 = 12;
    repeated uint32 mapSplitTilesRegion2 = 13;

    repeated Point startPositions = 14;
}

message MapData
{
    repeated BoolMapData isVisible = 1;
    repeated BoolMapData isExplored = 2;
    repeated BoolMapData hasCreep = 3;
    repeated BoolMapData isOccupied = 4;
}

message GameData {
    int32 apiVersion = 1;
    string engine = 2;
    string engineVersion = 3;
    bool tournament = 4;

    int32 gameType = 5;
    int32 frameCount = 6;
    int32 latencyFrames = 7;
    int32 turnSize = 8;
    int32 gameSpeed = 9;
    int32 frameSkip = 10;
    int32 remainingLatencyFrames = 11;
    int32 lastEventTime = 12;

    repeated int32 replayVisionPlayers = 13;

    int32 latencyTime = 14;
    int32 remainingLatencyTime = 15;
    int32 elapsedTime = 16;
    int32 millisecondsPerFrame = 17;
    float averageFPS = 18;

    int32 countdownTimer = 19;
    bool isPaused = 20;
    bool isInGame = 21;
    bool isMultiplayer = 22;
    bool isBattleNet = 23;
    bool isReplay = 24;
    bool clientUnitSelection = 25;
    bool hasGUI = 26;

    string gameName = 27;
    string randomSeed = 28;

    repeated int32 regions = 29;

    int32 player = 30;

    Point screenSize = 31;
    Point screenPosition = 32;

    StaticMapData staticMap = 33;

    MapData map = 34;
}

message Player {
    int32 id = 1;
    repeated string name = 2;
    repeated int32 race = 3;

    repeated int32 type = 4;
    repeated int32 force = 5;
    repeated BoolArrayData isAlly = 6;
    repeated BoolArrayData isEnemy = 7;
    repeated bool isNeutral = 8;
    repeated int32 startLocationX = 9;
    repeated int32 startLocationY = 10;
    repeated bool isVictorious = 11;
    repeated bool isDefeated = 12;
    repeated bool leftGame = 13;
    repeated bool isParticipating = 14;

    repeated int32 minerals = 15;
    repeated int32 gas = 16;
    repeated int32 gatheredMinerals = 17;
    repeated int32 gatheredGas = 18;
    repeated int32 repairedMinerals = 19;
    repeated int32 repairedGas = 20;
    repeated int32 refundedMinerals = 21;
    repeated int32 refundedGas = 22;
    repeated IntArrayData supplyTotal = 23;
    repeated IntArrayData supplyUsed = 24;

    repeated IntArrayData allUnitCount = 25;
    repeated IntArrayData visibleUnitCount = 26;
    repeated IntArrayData completedUnitCount = 27;
    repeated IntArrayData deadUnitCount = 28;
    repeated IntArrayData killedUnitCount = 29;

    repeated IntArrayData upgradeLevel = 30;
    repeated BoolArrayData hasResearched = 31;
    repeated BoolArrayData isResearching = 32;
    repeated BoolArrayData isUpgrading = 33;

    repeated int32 color = 34;

    repeated int32 totalUnitScore = 35;
    repeated int32 totalKillScore = 36;
    repeated int32 totalBuildingScore = 37;
    repeated int32 totalRazingScore = 38;
    repeated int32 customScore = 39;

    repeated IntArrayData maxUpgradeLevel = 40;
    repeated BoolArrayData isResearchAvailable = 41;
    repeated BoolArrayData isUnitAvailable = 42;
}

message Unit {
    int32 id = 1;
    int32 player = 2;
    int32 type = 3;
    Point position = 4;
    double angle = 5;
    double velocityX = 6;
    double velocityY = 7;
    int32 hitPoints = 8;
    int32 lastHitPoints = 9;
    int32 shields = 10;
    int32 energy = 11;
    int32 resources = 12;
    int32 resourceGroup = 13;

    int32 killCount = 14;
    int32 acidSporeCount = 15;
    int32 scarabCount = 16;
    int32 interceptorCount = 17;
    int32 spiderMineCount = 18;
    int32 groundWeaponCooldown = 19;
    int32 airWeaponCooldown = 20;
    int32 spellCooldown = 21;
    int32 defenseMatrixPoints = 22;

    int32 defenseMatrixTimer = 23;
    int32 ensnareTimer = 24;
    int32 irradiateTimer = 25;
    int32 lockdownTimer = 26;
    int32 maelstromTimer = 27;
    int32 orderTimer = 28;
    int32 plagueTimer = 29;
    int32 removeTimer = 30;
    int32 stasisTimer = 31;
    int32 stimTimer = 32;

    int32 buildType = 33;
    repeated int32 trainingQueue = 34;
    repeated int32 loadedUnits = 35;
    repeated int32 interceptors = 36;
    repeated int32 larva = 37;
    int32 tech = 38;
    int32 upgrade = 39;
    int32 remainingBuildTime = 40;
    int32 remainingTraintime = 41;
    int32 remainingResearchTime = 42;
    int32 remainingUpgradeTime = 43;
    int32 buildUnit = 44;

    int32 target = 45;
    Point targetPosition = 46;
    int32 order = 47;
    int32 orderTarget = 48;
    Point orderTargetPosition = 49;
    int32 secondaryOrder = 50;
    Point rallyPosition = 51;
    int32 rallyUnit = 52;
    int32 addon = 53;
    int32 nydusExit = 54;
    int32 powerUp = 55;

    int32 transport = 56;
    int32 carrier = 57;
    int32 hatchery = 58;
    
    bool exists = 59;
    bool hasNuke = 60;
    bool isAccelerating = 61;
    bool isAttacking = 62;
    bool isAttackFrame = 63;
    bool isBeingGathered = 64;
    bool isBeingHealed = 65;
    bool isBlind = 66;
    bool isBraking = 67;
    bool isBurrowed = 68;
    int32 carryResourceType = 69;
    bool isCloaked = 70;
    bool isCompleted = 71;
    bool isConstructing = 72;
    bool isDetected = 73;
    bool isGathering = 74;
    bool isHallucination = 75;
    bool isIdle = 76;
    bool isinterruptible = 77;
    bool isInvincible = 78;
    bool isLifted = 79;
    bool isMorphing = 80;
    bool isMoving = 81;
    bool isParasited = 82;
    bool isSelected = 83;
    bool isStartingAttack = 84;
    bool isStuck = 85;
    bool isTraining = 86;
    bool isUnderStorm = 87;
    bool isUnderDarkSwarm = 88;
    bool isUnderDWeb = 89;
    bool isPowered = 90;
    repeated bool isVisible = 91;
    int32  buttonset = 92;

    int32 lastCommandFrame = 93;
    int32 lastCommand = 94;

    int32 lastAttackerPlayer = 95;
    int32 replayID = 96;
    bool recentlyAttacked = 97;
}

message Region {
    int32 id = 1;
    int32 islandID = 2;
    int32 center_x = 3;
    int32 center_y = 4;
    int32 priority = 5;

    int32 leftMost = 6;
    int32 rightMost = 7;
    int32 topMost = 8;
    int32 bottomMost = 9;

    int32 neighborCount = 10;
    repeated int32 neighbors = 11;

    bool isAccessible = 12;
    bool isHigherGround = 13;
}

message Bullet {
    int32 id = 1;
    int32 player = 2;
    int32 type = 3;
    int32 source = 4;
    Point position = 5;
    double angle = 6;
    double velocityX = 7;
    double velocityY = 8;
    int32 target = 9;
    Point targetPosition = 10;
    int32 removeTimer = 11;
    bool exists = 12;
    repeated bool isVisible = 13;
}

message Force {
    int32 id = 1;
    repeated int32 players = 2;
    string name = 3;
}

message Game {
    GameData gameData = 1;
    repeated Player players = 2;
    repeated Unit units = 3;
    repeated Region regions = 4;
    repeated Bullet bullets = 5;
    repeated Force forces = 6;
}